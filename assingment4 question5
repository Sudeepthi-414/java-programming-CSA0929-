public class MultiplicationTable implements Runnable {

    private int number;

    public MultiplicationTable(int number) {
        this.number = number;
    }

    @Override
    public void run() {
        System.out.println("Thread " + Thread.currentThread().getId() + " is running.");

        System.out.println("Multiplication table for " + number + ":");
        for (int i = 1; i <= 10; i++) {
            System.out.println(number + " * " + i + " = " + (number * i));
            try {
                Thread.sleep(500); // Sleep for 500 milliseconds
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
        }

        System.out.println("Thread " + Thread.currentThread().getId() + " is finished.");
    }

    public static void main(String[] args) {
        Thread t1 = new Thread(new MultiplicationTable(5));
        Thread t2 = new Thread(new MultiplicationTable(10));

        t1.start(); // Start thread for multiplication table of 5
        t2.start(); // Start thread for multiplication table of 10

        try {
            Thread.sleep(1000); // Sleep for 1 second to let threads finish
        } catch (InterruptedException e) {
            e.printStackTrace();
        }

        System.out.println("Main thread is exiting.");
    }
}
